#include <iostream>
#include <string>
#include <vector>
#include <typeinfo>
#include <map>

using namespace std;

class Solution {
public:
    bool isSubsequence(string s, string t) {
        int lengthS = s.length();
        int lengthT = t.length();
		int hashTableS[256] = {0};
		int hashTableT[256] = {0};
		
		// estanblish hash table of string t
        for(int i=0; i<lengthT; i++){
			cout<<hashTableT[t[i]]<<" ";
			hashTableT[t[i]] = hashTableT[t[i]] + 1;
		}
		cout<<endl;
		for(int i=0; i<256; i++){
			if(hashTableT[t[i] == s[i]){
				cout<<"findit= "<<t[i]<<endl;
			}
		}
		cout<<"testEND"<<endl;
		return true;
    }
};

int main()
{
    string
    s1 = "abc",
    t1 = "ahbgdc",
    s2 = "axc",
    t2 = "ahbgdc";

    bool flag = false;
    Solution solution;
    flag = solution.isSubsequence(s1,t1);
    cout<<flag<<endl;

    flag = solution.isSubsequence(s2,t2);
    cout<<flag;

    return 0;
}
